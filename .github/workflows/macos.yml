# GitHub actions workflow.
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions

name: macOS

on:
  pull_request:
  push:
    branches:
      main

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest]
        cc: [gcc, clang]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install dependencies
      run: |
        brew install meson ninja boost pybind11

        case "${{ matrix.cc }}" in
          gcc)
            brew install gcc
            ;;
          clang)
            brew install llvm
            ;;
        esac

    - uses: actions/checkout@v4

    - name: Configure
      run: |
        # From brew messages post-LLVM install
        export PATH="/usr/local/opt/llvm/bin:${PATH}"
        export CPPFLAGS="-I/usr/local/opt/llvm/include ${CPPFLAGS}"
        export LDFLAGS="-L/usr/local/opt/llvm/lib ${LDFLAGS}"

        case "${{ matrix.cc }}" in
          gcc)
            export CC=/usr/local/bin/gcc-13
            export CXX=/usr/local/bin/g++-13
            ;;
          clang)
            LDFLAGS="-L/usr/local/opt/llvm/lib/c++ -Wl,-rpath,/usr/local/opt/llvm/lib/c++ ${LDFLAGS}"
            export CC=/usr/local/opt/llvm/bin/clang
            export CXX=/usr/local/opt/llvm/bin/clang++
            ;;
        esac

        meson setup -Dtest=true -Dwerror=true build

    - name: Build
      run: |
        # From brew messages post-LLVM install
        export PATH="/usr/local/opt/llvm/bin:${PATH}"
        export CPPFLAGS="-I/usr/local/opt/llvm/include ${CPPFLAGS}"
        export LDFLAGS="-L/usr/local/opt/llvm/lib ${LDFLAGS}"

        ninja -C build

    - name: Test
      run: |
        meson test -C build --print-errorlogs
