# GitHub actions workflow.
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions

name: Gentoo

on: [pull_request, push]

jobs:
  build:
    strategy:
      matrix:
        cc: [gcc, clang]
        sanitizer: [none, address, undefined]
        type: [debugoptimized, release]
      fail-fast: false
    runs-on: ubuntu-latest
    container: gentoo/stage3:latest
    env:
      CC: ${{ matrix.cc }}
      SANITIZER: ${{ matrix.sanitizer }}
    steps:
    - name: Install dependencies
      run: |
        export FEATURES="-network-sandbox -pid-sandbox -ipc-sandbox -mount-sandbox" # docker
        FEATURES="${FEATURES} binpkg-request-signature getbinpkg"

        case "${{ matrix.cc }}" in
          clang)
            pkgs+="sys-devel/clang sys-devel/lld "
            ;;
        esac

        emerge-webrsync -q
        getuto
        emerge -q dev-libs/boost dev-python/pybind11 ${pkgs}
        env-update

    - uses: actions/checkout@v4

    - name: Configure
      run: |
        # Needed to find LLVM tools
        . /etc/profile

        case "${{ matrix.cc }}" in
          gcc)
            export CC=gcc
            export CXX=g++
            ;;
          clang)
            export CC=clang
            export CXX=clang++
            args+="-Db_lundef=false "
            ;;
        esac
        case "${{ matrix.type }}" in
          *debug*)
              args+="-Dcpp_debugstl=true "
              ;;
          *)
              ;;
        esac

        meson setup --buildtype="${{ matrix.type }}" -Db_lto=true -Db_sanitize="${SANITIZER}" ${args} -Dtest=true -Dwerror=true build

    - name: Build
      run: |
        # Needed to find LLVM tools
        . /etc/profile

        ninja -C build

    - name: Test
      run: |
        meson test -C build --print-errorlogs
